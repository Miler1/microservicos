[{"/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/main.js":"1","/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/router.js":"2","/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/store.js":"3","/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/App.vue":"4","/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/services/user.service.js":"5","/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/views/Home.vue":"6","/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/views/Login.vue":"7","/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/views/Register.vue":"8","/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/views/Detail.vue":"9","/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/services/course.service.js":"10","/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/models/user.js":"11","/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/models/transaction.js":"12"},{"size":697,"mtime":1671328438570,"results":"13","hashOfConfig":"14"},{"size":1003,"mtime":1671328221682,"results":"15","hashOfConfig":"14"},{"size":786,"mtime":1671326075505,"results":"16","hashOfConfig":"14"},{"size":2439,"mtime":1671328036210,"results":"17","hashOfConfig":"14"},{"size":1174,"mtime":1671327638377,"results":"18","hashOfConfig":"14"},{"size":2464,"mtime":1671326966129,"results":"19","hashOfConfig":"14"},{"size":3480,"mtime":1671326431865,"results":"20","hashOfConfig":"14"},{"size":4440,"mtime":1671326752309,"results":"21","hashOfConfig":"14"},{"size":1875,"mtime":1671239600835,"results":"22","hashOfConfig":"14"},{"size":792,"mtime":1671154195062,"results":"23","hashOfConfig":"14"},{"size":258,"mtime":1670981583551,"results":"24","hashOfConfig":"14"},{"size":207,"mtime":1670977376600,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c9yw7o",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/main.js",[],"/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/router.js",[],"/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/store.js",[],"/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/App.vue",[],"/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/services/user.service.js",[],"/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/views/Home.vue",["54","55"],"<template>\n  <div class=\"container\">\n    <div class=\"transaction-container\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <div class=\"col col-xs-6\">\n              <h3 class=\"panel-title\">All Courses</h3>\n          </div>\n        </div>\n\n        <div class=\"card-body\">\n          <table class=\"table table-striped\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Course Title</th>\n                <th scope=\"col\">Author</th>\n                <th scope=\"col\">Detail</th>\n                <th scope=\"col\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(item, index) in courses\" v-bind:key=\"item.id\">\n                <th scope=\"row\">{{index}}</th>\n                <td>{{item.title}}</td>\n                <td>{{item.author}}</td>\n                <td>\n                  <button class=\"btn btn-info\" @click=\"detail(item)\">Detail</button>\n                </td>\n                <td>\n                  <button class=\"btn btn-info\" @click=\"enroll(item)\">Enroll</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport UserService from '../services/user.service';\nimport CourseService from '../services/course.service';\nimport {User} from '../models/user';\nimport {Transaction} from '../models/transaction';\n\nexport default {\n  name: 'home',\n  data() {\n    return {\n      courses: [],\n      currentUser: new User(),\n    };\n  },\n  created() {\n    UserService.currentUser.subscribe(data => {\n      this.currentUser = data;\n    });\n    CourseService.findAllCourses().then(data => {\n      this.courses = data.data;\n    });\n  },\n  methods: {\n    enroll(course) {\n      if(!this.currentUser) {\n        this.$store.dispatch('error', 'You should sign in to enroll a course.');\n        return;\n      }\n      var transaction = new Transaction(this.currentUser.id, course);\n      CourseService.createTransaction(transaction).then(data => {\n        this.$store.dispatch('success', 'Enrollment is completed.');\n      }, error => {\n        console.log(error);\n        this.$store.dispatch('error', 'Unexpected error occurred.');\n      })\n    },\n    detail(item) {\n      localStorage.setItem('detailCourse', JSON.stringify(item));\n      this.$router.push({name: 'detail', params: {id: item.id}});\n    }\n  }\n}\n</script>\n<style scoped>\n\n</style>\n","/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/views/Login.vue",["56","57","58"],"<template>\n    <div class=\"col-md-12\">\n        <div class=\"card card-container\">\n            <img id=\"profile-img\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" class=\"profile-img-card\"/>\n            <form name=\"form\" @submit.prevent=\"handleLogin\">\n                <div class=\"form-group\">\n                    <label for=\"username\">Username</label>\n                    <input type=\"text\" class=\"form-control\"\n                    name=\"username\" v-model=\"user.username\"\n                    v-validate=\"required\"/>\n                    <div class=\"alert alert-danger\" role=\"alert\"\n                    v-if=\"erros.has('username')\">\n                        Username is required.\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Password</label>\n                    <input type=\"password\" class=\"form-control\"\n                    name=\"password\" v-model=\"user.name\"\n                    v-validate=\"required\"/>\n                    <div class=\"alert alert-danger\" role=\"alert\"\n                    v-if=\"erros.has('password')\">\n                        Password is required.\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <button class=\"btn btn-primary btn-block\"\n                    :disabled=\"loading\">\n                        <span class=\"spinner-border spinner-border-sm\"\n                        v-show=\"loading\"></span>\n                            <span>Login</span>\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n</template>\n<script>\nimport UserService from '../services/user.service';\nimport User from '../models/user';\nexport default {\n    name: 'login',\n    data() {\n        return {\n            user: new User('',''),\n            loading: false,\n        };\n    },\n    mounted() {\n        if (UserService.currentUserValue) {\n            this.$router.push('/profile');\n        }\n    },\n    methods: {\n        handleLogin() {\n            this.loading = true;\n            this.$alidator.validateAll();\n            if (this.erros.any()) {\n                this.loading = false;\n                return;\n            }\n            UserService.login(this.user).then(\n                data => {\n                    this.$router.push('/profile')\n                },\n                error => {\n                    this.loading = false;\n                    this.$store.dispatch('error', 'Username or password is not valid.')\n                }\n            );\n        }\n    }\n}\n</script>\n<style scoped>\n    label {\n        display:'block';\n        margin-top: 10px;\n    }\n    .card-container.card {\n        max-width: 350px !important;\n        padding: 40px 40px;\n    }\n    .card {\n        background-color: #f7f7f7;\n        /* just in case there no content */\n        padding: 20px 25px 30px;\n        margin: 0 auto 25px;\n        margin-top: 50px;\n        /** shadows and rounded borders */\n        -moz-border-radius: 2px;\n        -webkit-border-radius: 2px;\n        border-radius:2px;\n        -moz-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n        -webkit-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n        box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n    }\n    .profile-img-card {\n        width: 96px;\n        height: 96px;\n        margin: 0 auto 10px;\n        display: block;\n        -moz-border-radius: 50%;\n        -webkit-border-radius: 50%;\n        border-radius: 50%;\n    }\n</style>","/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/views/Register.vue",["59","60"],"<template>\n    <div class=\"col-md-12\">\n        <div class=\"card card-container\">\n            <img id=\"profile-img\" src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" class=\"profile-img-card\"/>\n            <form name=\"form\" @submit.prevent=\"handleRegister\">\n                <div class=\"form-group\">\n                    <label for=\"name\">Full Name</label>\n                    <input type=\"text\" class=\"form-control\"\n                    name=\"name\" v-model=\"user.name\"\n                    v-validate=\"required\"/>\n                    <div class=\"alert alert-danger\" role=\"alert\"\n                    v-if=\"erros.has('name')\">\n                        Full name is required.\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"username\">Username</label>\n                    <input type=\"text\" class=\"form-control\"\n                    name=\"username\" v-model=\"user.username\"\n                    v-validate=\"required\"/>\n                    <div class=\"alert alert-danger\" role=\"alert\"\n                    v-if=\"erros.has('username')\">\n                        Username is required.\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password\">Password</label>\n                    <input type=\"password\" class=\"form-control\"\n                    name=\"password\" v-model=\"user.name\"\n                    v-validate=\"required\"/>\n                    <div class=\"alert alert-danger\" role=\"alert\"\n                    v-if=\"erros.has('password')\">\n                        Password is required.\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <button class=\"btn btn-primary btn-block\"\n                    :disabled=\"loading\">\n                        <span class=\"spinner-border spinner-border-sm\"\n                        v-show=\"loading\"></span>\n                            <span>Sign Up</span>\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n</template>\n<script>\nimport UserService from '../services/user.service';\nimport User from '../models/user';\nexport default {\n    name: 'register',\n    data() {\n        return {\n            user: new User('','',''),\n            loading: false,\n        };\n    },\n    mounted() {\n        if (UserService.currentUserValue) {\n            this.$router.push('/profile');\n        }\n    },\n    methods: {\n        handleRegister() {\n            this.loading = true;\n            this.$alidator.validateAll();\n            if (this.erros.any()) {\n                this.loading = false;\n                return;\n            }\n            UserService.register(this.user).then(\n                data => {\n                    this.$store.dispatch('success', 'Mission is completed.');\n                    setTimeout(() => {\n                        this.$router.push('/login')\n                    }, 1000);\n                },\n                error => {\n                    if(!error.response) {\n                        this.$store.dispatch('error', error);\n                    } else if(error.response.status === 409) {\n                        this.$store.dispatch('error', 'Username is not valid.');\n                    } else {\n                        this.$store.dispatch('error', 'Unexpected error occurred.');\n                    }\n                }\n            )\n            .then(() => {\n                this.loading = false;\n            });\n        }\n    }\n}\n</script>\n<style scoped>\n    label {\n        display:'block';\n        margin-top: 10px;\n    }\n    .card-container.card {\n        max-width: 350px !important;\n        padding: 40px 40px;\n    }\n    .card {\n        background-color: #f7f7f7;\n        /* just in case there no content */\n        padding: 20px 25px 30px;\n        margin: 0 auto 25px;\n        margin-top: 50px;\n        /** shadows and rounded borders */\n        -moz-border-radius: 2px;\n        -webkit-border-radius: 2px;\n        border-radius:2px;\n        -moz-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n        -webkit-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n        box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\n    }\n    .profile-img-card {\n        width: 96px;\n        height: 96px;\n        margin: 0 auto 10px;\n        display: block;\n        -moz-border-radius: 50%;\n        -webkit-border-radius: 50%;\n        border-radius: 50%;\n    }\n</style>","/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/views/Detail.vue",["61"],"<template>\n    <div class=\"container\">\n        <header class=\"jumbotron\">\n            <h1>\n                <strong>{{currentCourse.title}}</strong> details are displayed...\n            </h1>\n            <h1 class=\"display-3\"> <strong>{{courseId}}</strong></h1>\n        </header>\n\n        <div class=\"transaction-container\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <div class=\"row\">\n                        <div class=\"col col-xs-6\">\n                            <h3 class=\"panel-title\">All Students</h3>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"card-body\">\n                <table class=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Student Name</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr v-for=\"(item, index) in students\" v-bind:key=\"item.id\">\n                            <th scope=\"row\">{{index}}</th>\n                            <td>{{item}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n        </div>\n    </div>\n</template>\n<script>\nimport courseService from '../services/course.service';\nexport default {\n    name: 'detail',\n    data() {\n        return {\n            courseId: null,\n            currentCourse: null,\n            students: []\n        };\n    },\n    created() {\n        this.currentCourse = JSON.parse(localStorage.get('detailCourse'));\n        this.courseId = this.$route.params.id;\n\n        courseService.filterStudents(this.courseId).then(students => {\n            this.students = students.data;\n        })\n    }\n}\n</script>\n<style scoped>\n\n</style>","/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/services/course.service.js",[],"/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/models/user.js",[],"/home/miler/Área de Trabalho/springboot-vuejs/client-side/src/models/transaction.js",[],{"ruleId":"62","severity":2,"message":"63","line":49,"column":9,"nodeType":"64","messageId":"65","endLine":49,"endColumn":15},{"ruleId":"66","severity":2,"message":"67","line":71,"column":57,"nodeType":"68","messageId":"69","endLine":71,"endColumn":61},{"ruleId":"62","severity":2,"message":"70","line":42,"column":11,"nodeType":"64","messageId":"65","endLine":42,"endColumn":18},{"ruleId":"66","severity":2,"message":"67","line":63,"column":17,"nodeType":"68","messageId":"69","endLine":63,"endColumn":21},{"ruleId":"66","severity":2,"message":"71","line":66,"column":17,"nodeType":"68","messageId":"69","endLine":66,"endColumn":22},{"ruleId":"62","severity":2,"message":"72","line":52,"column":11,"nodeType":"64","messageId":"65","endLine":52,"endColumn":21},{"ruleId":"66","severity":2,"message":"67","line":73,"column":17,"nodeType":"68","messageId":"69","endLine":73,"endColumn":21},{"ruleId":"62","severity":2,"message":"73","line":44,"column":11,"nodeType":"64","messageId":"65","endLine":44,"endColumn":19},"vue/multi-word-component-names","Component name \"home\" should always be multi-word.","Literal","unexpected","no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","Component name \"login\" should always be multi-word.","'error' is defined but never used.","Component name \"register\" should always be multi-word.","Component name \"detail\" should always be multi-word."]